// Include theming for Angular Material with `mat.theme()`.
// This Sass mixin will define CSS variables that are used for styling Angular Material
// components according to the Material 3 design spec.
// Learn more about theming and how to use it for your application's
// custom components at https://material.angular.dev/guide/theming
@use '@angular/material' as mat;

@import 'assets/fonts/fonts.scss';

:root {
  --purple-1: #444df2;
}

:root {
  --purple-light: rgba(236,238,254,1);
}

html {
  @include mat.theme((
    color: (
      primary: mat.$azure-palette,
      tertiary: mat.$blue-palette,
    ),
    typography: Roboto,
    density: 0,
  ));
}

body {
  // Default the application to a light color theme. This can be changed to
  // `dark` to enable the dark color theme, or to `light dark` to defer to the
  // user's system settings.
  color-scheme: light;

  // Set a default background, font and text colors for the application using
  // Angular Material's system-level CSS variables. Learn more about these
  // variables at https://material.angular.dev/guide/system-variables
  background-color: var(--mat-sys-surface);
  color: var(--mat-sys-on-surface);
  font: var(--mat-sys-body-medium);

  // Reset the user agent margin.
  margin: 0;
}


body, html {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

.top-right {
    position: absolute;
    top: 16px;
    right: 16px;
}

.column {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: left;
}

.full-width {
    width: 100%;
}

/* Global overrides for form-field icons and inputs
   Placing these in styles.scss ensures consistent behavior for all team members
   (no need for ::ng-deep in components) and works across Material versions.
*/
.mat-mdc-form-field-icon-prefix > .mat-icon,
.mat-mdc-form-field-icon-suffix > .mat-icon,
.mat-mdc-form-field-prefix .material-icons-outlined,
.mat-mdc-form-field-suffix .material-icons-outlined {
  padding: 0 24px !important;
  color: #6b6b6b; /* default gray */
}

/* Move the prefix container (not the placeholder) to create space from the field edge */
.mat-mdc-form-field-prefix,
.mat-mdc-form-field-icon-prefix,
.mat-mdc-form-field-icon-suffix,
.mat-mdc-form-field-suffix {
  padding-left: 16px !important; /* push icon away from left edge */
  margin-right: 8px !important; /* spacing between icon and input content */
}

/* Focus styles: purple outline and icon color change */
.mat-mdc-form-field-wrapper:focus-within .mat-mdc-form-field-flex,
.mat-mdc-form-field:focus-within .mat-mdc-form-field-flex {
  /* Thinner, less pronounced focus ring using theme variable */
  /* Use a semi-transparent fallback and prefer the CSS variable for theming */
  /* Use the exact theme color, fully opaque (no transparent mix) */
  box-shadow: 0 0 0 1px var(--purple-1) !important;
}
.mat-mdc-form-field:focus-within .mat-mdc-notched-outline {
  /* Make the visible outline thinner on focus */
  border-color: var(--purple-1) !important;
  border-width: 1px !important;
}
.mat-mdc-form-field:focus-within .material-icons-outlined,
.mat-mdc-form-field:focus-within .mat-icon {
  color: #000 !important;
}

/* Hover state: subtle 1px outline using the placeholder gray (only when not focused) */
.mat-mdc-form-field:hover:not(:focus-within) .mat-mdc-form-field-flex,
.custom-form-field:hover:not(:focus-within) .mat-mdc-form-field-flex {
  box-shadow: 0 0 0 1px #6b6b6b !important;
}

/* Smooth transitions for hover/focus changes */
.mat-mdc-form-field .mat-mdc-form-field-flex,
.custom-form-field .mat-mdc-form-field-flex {
  transition: box-shadow 140ms ease, border-color 140ms ease;
}

/* Styles for the 'Weiter' button in the signin dialog */
.btn-weiter {
  background-color: var(--purple-1) !important;
  color: white !important;
  border-radius: 20px;
  padding: 8px 16px;
  transition: background-color 160ms ease, color 160ms ease;
}
.btn-weiter:hover:not(:disabled) {
  /* Slightly transparent on hover: use rgba of the theme color */
  background-color: rgba(116, 122, 236, 0.9) !important; /* var(--purple-1) = #444df2 */
  color: white !important;
}
.btn-weiter:disabled {
  background-color: #bfbfdc !important; /* dimmed purple */
  color: #f5f5f7 !important;
}

/* Migrated from dialog.signin-component.scss: component-scoped rules made global
   These ensure `.custom-form-field` elements get consistent background, outline
   and placeholder behavior across the app without using ::ng-deep in components.
*/
.custom-form-field .mat-mdc-form-field-flex {
  background-color: var(--purple-light);
  border-radius: 100px;
  overflow: hidden;
}

.custom-form-field .mdc-notched-outline > * {
  border: none !important;
}

.custom-form-field .material-icons-outlined,
.custom-form-field .mat-mdc-form-field-prefix .material-icons-outlined {
  color: #6b6b6b !important; /* default gray */
}

.custom-form-field:focus-within .material-icons-outlined,
.custom-form-field:focus-within .mat-mdc-form-field-prefix .material-icons-outlined {
  color: #000000 !important; /* black on focus */
}

/* Placeholder behavior for custom-form-field inputs */
.custom-form-field input::placeholder {
  color: #6b6b6b;
  transition: color 120ms ease;
}
.custom-form-field input::-webkit-input-placeholder { color: #6b6b6b; }
.custom-form-field input::-moz-placeholder { color: #6b6b6b; }
.custom-form-field input:-ms-input-placeholder { color: #6b6b6b; }

.custom-form-field:focus-within input::placeholder { color: transparent !important; }
.custom-form-field:focus-within input::-webkit-input-placeholder { color: transparent !important; }
.custom-form-field:focus-within input::-moz-placeholder { color: transparent !important; }
.custom-form-field:focus-within input:-ms-input-placeholder { color: transparent !important; }
